1测试登录和注册的回调是否被调用
telnet 127.0.0.1 6000
{"msgid":1}
{"msgid":2}
{"msgid":4}  
2测试注册是否成功写入数据库
{"msgid":4,"name":"wangxinlin","password":"123456"}
3测试登录是否正常，包含三种情况：
正常登录
{"msgid":1,"id":1,"password":"123456"}
登录成功，更新用户状态信息
{"msgid":1,"id":1,"password":"123456"}
测试用户不存在、用户存在但是密码错误，登录失败
{"msgid":1,"id":0,"password":"123456"}
{"msgid":1,"id":0,"password":"12345678"}
4测试异常退出，测试正常
{"msgid":1,"id":1,"password":"12345678"}ctrl+]
输入quit
5测试一对一聊天
//注册新用户
{"msgid":4,"name":"liaoyl","password":"666666"}
//登录
{"msgid":1,"id":1,"password":"123456"}
{"msgid":1,"id":3,"password":"666666"}
//1给3发送
{"msgid":6,"id":3,"from":"liaoyl","to":1,"msg":"I love you"}
{"msgid":6,"id":1,"from":"wangxinlin","to":3,"msg":"I love you too"}
6测试离线发送消息
登录并发给另一个未登录的消息
{"msgid":1,"id":1,"password":"123456"}
{"msgid":6,"id":1,"from":"wangxinlin","to":3,"msg":"I love you too"}
{"msgid":1,"id":3,"password":"666666"}
7测试服务器异常退出时，将online改为离线状态
{"msgid":1,"id":1,"password":"123456"}
服务器按ctrl+c
8添加好友
//注册信用户并添加好友
{"msgid":4,"name":"wxl","password":"123456"}
{"msgid":7,"userid":1,"friendid":4}
//登录看是否正常打印好友列表
{"msgid":1,"id":1,"password":"123456"}
9群组业务未测试，直接构建json比较麻烦，后续开发完客户端在测试
10服务负载均衡
编译使支持tcp的负载均衡并启动nginx，启动两台配置在nginx中的服务器，并启动多个客户端，客户端向nginx服务器的ip和配置的端口发请求，再看服务器请求响应是否达到负载均衡效果
11跨服务器通信
安装redis-server、redis-cli及hredis，同10，启动nginx中的配置的服务器，并启动多个客户端，向nginx服务器的ip和端口发请求，各客户端登录后，使用chat和groupchat分别发送聊天命令，可以看到连接上的服务器中打印connect redis-server success并且聊天可正常运行